{
    "update.mode": "none",
    "update.showReleaseNotes": true,
    "search.exclude": {
        "**/build/include": true
    },

    "clangd.syncFileEvents": true,
    "clangd.path": "/usr/bin/clangd",
    "clangd.semanticHighlighting": true,
    "clangd.trace": "/home/ptaylor/.vscode/clangd.log",
    "clangd.arguments": [
        "-j=4",
        "--log=info",
        "--pch-storage=disk",
        "--completion-parse=auto",
        "--fallback-style=Google",
        "--compile-commands-dir=",
        "--background-index=true",
        "--all-scopes-completion",
        "--header-insertion=iwyu",
        "--suggest-missing-includes",
        "--completion-style=detailed",
        "--header-insertion-decorators",
    ],

    // Controls how lines should wrap. Can be:
    //  - 'off' (disable wrapping),
    //  - 'on' (viewport wrapping),
    //  - 'wordWrapColumn' (wrap at `editor.wordWrapColumn`) or
    //  - 'bounded' (wrap at minimum of viewport and `editor.wordWrapColumn`).
    "editor.wordWrap": "off",
    "editor.wordWrapColumn": 80,
    "editor.tabSize": 4,
    "editor.insertSpaces": true,
    "editor.detectIndentation": false,
    "editor.semanticHighlighting.enabled": true,
    "[cpp]": { "editor.tabSize": 2 },
    "[cuda]": { "editor.tabSize": 2 },
    "[json]": { "editor.tabSize": 2, "editor.wordWrap": "on" },

    "debug.toolBarLocation": "docked",
    "editor.fontFamily": "Menlo, 'Droid Sans Mono', 'monospace', monospace, 'Droid Sans Fallback'",
    // The modifier to be used to add multiple cursors with the mouse. `ctrlCmd` maps to `Control` on Windows and Linux and to `Command` on OSX. The Go To Definition and Open Link mouse gestures will adapt such that they do not conflict with the multicursor modifier.
    "editor.multiCursorModifier": "alt",
    // Enable usage data and errors to be sent to Microsoft.
    "telemetry.enableTelemetry": false,
    "telemetry.enableCrashReporter": false,
    // Controls if the explorer should automatically reveal and select files when opening them.
    "explorer.autoReveal": false,
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,

    "breadcrumbs.enabled": false,
    
    "window.zoomLevel": 0,
    // Controls whether the terminal cursor blinks.
    "terminal.integrated.cursorBlinking": true,
    // Controls the style of terminal cursor.
    "terminal.integrated.cursorStyle": "line",
    // Treat the option key as the meta key in the terminal on macOS.
    "terminal.integrated.macOptionIsMeta": true,
    // Scans devDependencies as well
    "npm-intellisense.scanDevDependencies": true,
    // (experimental) Enables path intellisense in subfolders of modules
    "npm-intellisense.packageSubfoldersIntellisense": true,
    // shows build in node modules like 'path' of 'fs'
    "npm-intellisense.showBuildInLibs": true,
    // For import command. Use import statements instead of require()
    "npm-intellisense.importES6": false,
    "npm-intellisense.importQuotes": "'",
    "npm-intellisense.importDeclarationType": "const",
    "npm-intellisense.recursivePackageJsonLookup": true,
    "npm.enableScriptExplorer": false,

    "extensions.ignoreRecommendations": true,
    "extensions.autoUpdate": false,

    // "java.errors.incompleteClasspath.severity": "ignore",

    "diffEditor.ignoreTrimWhitespace": true,

    "javascript.updateImportsOnFileMove.enabled": "never",
    "javascript.preferences.importModuleSpecifier": "relative",
    "javascript.preferences.quoteStyle": "single",

    "typescript.updateImportsOnFileMove.enabled": "never",
    "typescript.surveys.enabled": false,
    "typescript.preferences.quoteStyle": "single",
    "typescript.preferences.importModuleSpecifier": "relative",
    "typescript.tsdk": "node_modules/typescript/lib",

    "python.dataScience.enabled": false,
    "python.dataScience.useNotebookEditor": false,
    "python.dataScience.allowImportFromNotebook": false,
    "python.dataScience.changeDirOnImportExport": false,
    "python.dataScience.searchForJupyter": false,
    "python.dataScience.useDefaultConfigForJupyter": false,
    "python.dataScience.sendSelectionToInteractiveWindow": false,

    "python.jediEnabled": true,
    "python.disableInstallationCheck": true,

    "python.linting.enabled": false,
    "python.linting.lintOnSave": false,
    "python.linting.mypyEnabled": false,
    "python.linting.pycodestyleEnabled": false,
    "python.linting.banditEnabled": false,
    "python.linting.pylintEnabled": false,
    "python.linting.flake8Enabled": false,
    "python.linting.pylamaEnabled": false,
    "python.linting.prospectorEnabled": false,
    "python.linting.pydocstyleEnabled": false,
    "python.linting.pylintUseMinimalCheckers": false,

    "python.experiments.enabled": false,
    "python.terminal.activateEnvironment": false,
    "python.testing.promptToConfigure": false,
    "python.testing.autoTestDiscoverOnSaveEnabled": false,

    "window.titleBarStyle": "native",

    "workbench.colorTheme": "Monokai",
    "workbench.sideBar.location": "left",
    "workbench.panel.defaultLocation": "right",
    "workbench.startupEditor": "newUntitledFile",
    "workbench.tips.enabled": false,
    "workbench.editor.splitSizing": "split",

    "outline.icons": false,
    "outline.problems.enabled": false,
    "outline.problems.colors": false,
    "outline.problems.badges": false,
    "debug.openExplorerOnEnd": true,

    "terminal.integrated.rendererType": "canvas",
    "terminal.integrated.rightClickBehavior": "selectWord",
    "terminal.integrated.scrollback": 100000,
    "terminal.integrated.showExitAlert": false,
    "terminal.integrated.allowChords": false,
    "zenMode.fullScreen": false,
    "zenMode.hideActivityBar": false,
    "zenMode.hideLineNumbers": false,
    "zenMode.hideStatusBar": false,
    "zenMode.hideTabs": false,
    "zenMode.restore": true,

    "C_Cpp.formatting": "Disabled",
    "C_Cpp.autocomplete": "Disabled",
    "C_Cpp.errorSquiggles": "Disabled",
    "C_Cpp.intelliSenseEngine": "Disabled",
    "C_Cpp.configurationWarnings": "Disabled",
    "C_Cpp.autoAddFileAssociations": false,
    "C_Cpp.vcpkg.enabled": false,
    "diffEditor.maxComputationTime": 0
}
